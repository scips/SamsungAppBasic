// Generated by CoffeeScript 1.4.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(["jquery", "underscore", "application/views/screen", "highcharts", "highchartsexport"], function($, _, ScreenView, Highcharts, Exporting) {
  var screen1ScreenView;
  return screen1ScreenView = (function(_super) {

    __extends(screen1ScreenView, _super);

    screen1ScreenView.prototype.getItemTemplate = function() {
      return "<li class=\"item\">\n  <span class=\"title\"><%= title %></span><span class=\"value\"><%= value %></span>\n</li>";
    };

    function screen1ScreenView(divID) {
      this.divID = divID;
      screen1ScreenView.__super__.constructor.call(this, this.divID);
    }

    screen1ScreenView.prototype.show = function() {
      var html;
      html = this.parseTemplate();
      console.log(html);
      $("" + this.divID + " .list").html(html);
      this.displayGraph();
      return screen1ScreenView.__super__.show.call(this);
    };

    screen1ScreenView.prototype.parseTemplate = function() {
      var item, liItem, list, template;
      template = this.getItemTemplate();
      if (this.data && this.data.length > 0) {
        return list = (function() {
          var _i, _len, _ref, _results;
          _ref = this.data;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            item = _ref[_i];
            liItem = {
              title: item.name,
              value: item.value
            };
            _results.push(_.template(template, liItem));
          }
          return _results;
        }).call(this);
      }
    };

    screen1ScreenView.prototype.displayGraph = function() {
      var chart, item, seriesData;
      seriesData = (function() {
        var _i, _len, _ref, _results;
        _ref = this.data;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          item = _ref[_i];
          _results.push(parseInt(item.value));
        }
        return _results;
      }).call(this);
      console.log(seriesData);
      return chart = new Highcharts.Chart({
        chart: {
          renderTo: $("" + this.divID + " .graph")[0],
          type: 'bar'
        },
        title: {
          text: 'Historic World Population by Region'
        },
        subtitle: {
          text: 'Source: Wikipedia.org'
        },
        xAxis: {
          categories: ['Africa', 'America', 'Asia', 'Europe', 'Oceania'],
          title: {
            text: null
          }
        },
        yAxis: {
          min: 0,
          title: {
            text: 'Population (millions)',
            align: 'high'
          },
          labels: {
            overflow: 'justify'
          }
        },
        tooltip: {
          formatter: function() {
            return '' + this.series.name(+': ' + this.y(+' millions'));
          }
        },
        plotOptions: {
          bar: {
            dataLabels: {
              enabled: true
            }
          }
        },
        legend: {
          layout: 'vertical',
          align: 'right',
          verticalAlign: 'top',
          x: -100,
          y: 100,
          floating: true,
          borderWidth: 1,
          backgroundColor: '#FFFFFF',
          shadow: true
        },
        credits: {
          enabled: false
        },
        series: [
          {
            name: 'Hits',
            data: seriesData
          }
        ]
      });
    };

    return screen1ScreenView;

  })(ScreenView);
});
